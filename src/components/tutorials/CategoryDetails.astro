---
import { getCollection } from 'astro:content';
import Icon from '@components/ui/Icon.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
    category: CollectionEntry<'categories'>;
    tutorial?: CollectionEntry<'tutoriels'>; // Selected tutorial
}
const { category, tutorial: selectedTutorial } = Astro.props;
const expanded = selectedTutorial?.data.category.id === category.id;

const tutorials = await getCollection('tutoriels', ({ data }) => {
    return data.category.id === category.id;
});
---

<div is="category-details">
    <button class="group flex items-center text-start hover:text-white aria-selected:text-white aria-selected:font-semibold w-full" aria-expanded={expanded} aria-selected={expanded}>
        <span class="grow">
            {category.data.name}
        </span>
        <div class="flex items-center justify-center hover:bg-neutral-700 rounded-full group-aria-expanded:rotate-90 transition-transform w-6 h-6">
            <Icon class="w-4 h-4 fill-none stroke-current stroke-[1.5]" name="right-chevron" />
        </div>
    </button>
    <ul class="hidden aria-expanded:flex flex-col gap-4 mt-4 -ml-[1px] border-l-2 border-neutral-800" aria-expanded={expanded}>
        {tutorials.map(tutorial =>
        <li class="flex text-sm text-neutral-400 hover:text-white aria-selected:text-white pl-4 border-l border-transparent hover:border-white aria-selected:border-white" aria-selected={tutorial.id === selectedTutorial?.id}>
            <a class="grow" href={`/${tutorial.slug.split('/')[0]}/tutoriels/${tutorial.slug.split('/')[1]}/`}>
                {tutorial.data.title}
            </a>
            <div class="invisible w-6 h-6 px-1"></div>
        </li>
        )}
        {tutorials.length === 0 &&
        <li class="flex text-sm text-neutral-400 italic pl-4">
            <a class="grow">
                Aucun tutoriel
            </a>
            <div class="invisible w-6 h-6 px-1"></div>
        </li>
        }
    </ul>
</div>

<script>
    import { CategoryDetails } from "@libs/components/CategoryDetails";
    customElements.define('category-details', CategoryDetails, { extends: 'div' });
</script>